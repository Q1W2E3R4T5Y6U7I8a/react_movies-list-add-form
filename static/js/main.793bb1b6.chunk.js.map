{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","onBlur","showError","error","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","target","NewMovie","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","titleError","setTitleError","imgUrlError","setImgUrlError","imdbUrlError","setImdbUrlError","imdbIdError","setImdbIdError","isFormSubmitted","setIsFormSubmitted","validateUrl","url","test","onSubmit","preventDefault","trim","prevCount","newValue","undefined","disabled","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"utEAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,aAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,0BA5BkC,ECE7BC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,OAFE,KAFsB,E,8BCWpC,IAAMC,EAA6B,SAAC,GAUpC,IATLC,EASI,EATJA,KACAC,EAQI,EARJA,MAQI,IAPJC,aAOI,MAPIF,EAOJ,MANJG,mBAMI,sBANmBD,GAMnB,MALJE,gBAKI,aAJJC,gBAII,MAJO,WAAQ,EAIf,MAHJC,cAGI,MAHK,WAAQ,EAGb,MAFJC,iBAEI,SADJC,EACI,EADJA,MAEA,EAAaC,oBAAS,2BAAST,EAAT,YAhBfU,KAAKC,SACTC,QAAQ,IACRC,MAAM,GAca,IAAfC,EAAP,oBACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACMC,EAAWF,GAAWX,IAAaH,EAEzC,OACE,sBAAKd,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ+B,QAASJ,EAAlC,SACGZ,IAGH,qBAAKf,UAAU,UAAf,SACE,uBACEgC,KAAK,OACLL,GAAIA,EACJ,0BAAkBd,GAClBb,UAAWiC,IAAW,QAAS,CAC7B,YAAab,GAAaU,IAE5Bd,YAAaA,EACbF,MAAOA,EACPI,SAAU,SAACgB,GACTL,GAAW,GACXX,EAASgB,EAAMC,OAAOrB,MACvB,EACDK,OAAQ,WACNU,GAAW,GACXV,GACD,MAIJC,GAAaU,GACZ,mBAAG9B,UAAU,iBAAb,mBAAkCe,EAAlC,kBAGDK,GAAaC,GACZ,mBAAGrB,UAAU,iBAAb,SAA+BqB,MAItC,ECrEYe,EAAqB,WAChC,MAA0Bd,mBAAS,GAAnC,mBAAOe,EAAP,KAAcC,EAAd,KAEA,EAA0BhB,mBAAS,IAAnC,mBAAOlB,EAAP,KAAcmC,EAAd,KACA,EAAsCjB,mBAAS,IAA/C,mBAAOjB,EAAP,KAAoBmC,EAApB,KACA,EAA4BlB,mBAAS,IAArC,mBAAOpB,EAAP,KAAeuC,EAAf,KACA,EAA8BnB,mBAAS,IAAvC,mBAAOf,EAAP,KAAgBmC,EAAhB,KACA,EAA4BpB,mBAAS,IAArC,mBAAOX,EAAP,KAAegC,EAAf,KAEA,EAAoCrB,oBAAS,GAA7C,mBAAOsB,EAAP,KAAmBC,EAAnB,KACA,EAAsCvB,oBAAS,GAA/C,mBAAOwB,EAAP,KAAoBC,EAApB,KACA,EAAwCzB,oBAAS,GAAjD,mBAAO0B,EAAP,KAAqBC,EAArB,KACA,EAAsC3B,oBAAS,GAA/C,mBAAO4B,EAAP,KAAoBC,EAApB,KAEA,EAA8C7B,oBAAS,GAAvD,mBAAO8B,EAAP,KAAwBC,EAAxB,KAkBMC,EAAc,SAACC,GAInB,MAFgB,wKAEDC,KAAKD,EACrB,EA+BD,OACE,uBAAMvD,UAAU,WAAuByD,SA9BpB,SAACvB,GAQpB,GAPAA,EAAMwB,iBAENb,GAAezC,EAAMuD,QACrBZ,GAAgB7C,EAAOyD,QACvBV,GAAiB1C,EAAQoD,QACzBR,GAAgBxC,EAAOgD,QAEnBvD,EAAMuD,QAAUzD,EAAOyD,QAAUpD,EAAQoD,QAAUhD,EAAOgD,OAAQ,CACpE,IAAKL,EAAYpD,GAIf,OAHA6C,GAAe,QACfM,GAAmB,GAKrB,IAAKC,EAAY/C,GAIf,OAHA0C,GAAgB,QAChBI,GAAmB,GAxCvBd,EAAS,IACTC,EAAe,IACfC,EAAU,IACVC,EAAW,IACXC,EAAU,IAEVE,GAAc,GACdE,GAAe,GACfE,GAAgB,GAChBE,GAAe,GAEfE,GAAmB,GACnBf,GAAS,SAAAsB,GAAS,OAAIA,EAAY,CAAhB,GAkCjB,CAEDP,GAAmB,EACpB,EAGC,UACE,oBAAIrD,UAAU,QAAd,yBAEA,cAAC,EAAD,CACEa,KAAK,QACLE,MAAM,QACND,MAAOV,EACPc,SAAU,SAAC2C,GAAD,OAActB,EAASsB,EAAvB,EACV5C,UAAQ,EACRI,MAAOuB,EAAa,yBAAsBkB,EAC1C3C,OAAQ,kBAAMkC,GAAmB,EAAzB,IAGV,cAAC,EAAD,CACExC,KAAK,cACLE,MAAM,cACND,MAAOT,EACPa,SAAU,SAAC2C,GAAD,OAAcrB,EAAeqB,EAA7B,IAGZ,cAAC,EAAD,CACEhD,KAAK,SACLE,MAAM,YACND,MAAOZ,EACPgB,SAAU,SAAC2C,GAAD,OAAcpB,EAAUoB,EAAxB,EACV1C,OAAQ,kBAAM4B,GAAgB7C,EAAOyD,OAA7B,EACR1C,UAAQ,EACRG,UAAWgC,EACX/B,OACGyB,EAAe,wBACZM,IAAoBE,EAAYpD,IAAW,2BAC5C4D,IAIP,cAAC,EAAD,CACEjD,KAAK,UACLE,MAAM,WACND,MAAOP,EACPW,SAAU,SAAC2C,GAAD,OAAcnB,EAAWmB,EAAzB,EACV1C,OAAQ,kBAAM8B,GAAiB1C,EAAQoD,OAA/B,EACR1C,UAAQ,EACRG,UAAWgC,EACX/B,OACG2B,EAAgB,uBACbI,IAAoBE,EAAY/C,IAAY,0BAC7CuD,IAIP,cAAC,EAAD,CACEjD,KAAK,SACLE,MAAM,UACND,MAAOH,EACPO,SAAU,SAAC2C,GAAD,OAAclB,EAAUkB,EAAxB,EACV1C,OAAQ,kBAAMgC,GAAgBxC,EAAOgD,OAA7B,EACR1C,UAAQ,EACRG,UAAWgC,EACX/B,MAAO6B,EAAc,2BAAwBY,IAG/C,qBAAK9D,UAAU,mBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACEgC,KAAK,SACL,UAAQ,gBACRhC,UAAU,iBACV+D,UACG3D,EAAMuD,SACHzD,EAAOyD,SACPpD,EAAQoD,SACRhD,EAAOgD,OARf,uBA/D0BtB,EAgFnC,ECnJY2B,EAAM,WACjB,OACE,sBAAKhE,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQwD,MAEtB,qBAAKjE,UAAU,UAAf,SACE,cAAC,EAAD,QAIP,ECZDkE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.793bb1b6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string;\n  value: string;\n  label?: string;\n  placeholder?: string;\n  required?: boolean;\n  onChange?: (newValue: string) => void;\n  onBlur?: () => void;\n  showError?: boolean;\n  error?: string | undefined;\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  onBlur = () => {},\n  showError = false,\n  error,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': showError && hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={(event) => {\n            setTouched(false);\n            onChange(event.target.value);\n          }}\n          onBlur={() => {\n            setTouched(true);\n            onBlur();\n          }}\n        />\n      </div>\n\n      {showError && hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {showError && error && (\n        <p className=\"help is-danger\">{error}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\n\nexport const NewMovie: React.FC = () => {\n  const [count, setCount] = useState(0);\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [titleError, setTitleError] = useState(false);\n  const [imgUrlError, setImgUrlError] = useState(false);\n  const [imdbUrlError, setImdbUrlError] = useState(false);\n  const [imdbIdError, setImdbIdError] = useState(false);\n\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n\n    setTitleError(false);\n    setImgUrlError(false);\n    setImdbUrlError(false);\n    setImdbIdError(false);\n\n    setIsFormSubmitted(false);\n    setCount(prevCount => prevCount + 1);\n  };\n\n  const validateUrl = (url: string): boolean => {\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)?(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n    return pattern.test(url);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setTitleError(!title.trim());\n    setImgUrlError(!imgUrl.trim());\n    setImdbUrlError(!imdbUrl.trim());\n    setImdbIdError(!imdbId.trim());\n\n    if (title.trim() && imgUrl.trim() && imdbUrl.trim() && imdbId.trim()) {\n      if (!validateUrl(imgUrl)) {\n        setImgUrlError(true);\n        setIsFormSubmitted(true);\n\n        return;\n      }\n\n      if (!validateUrl(imdbUrl)) {\n        setImdbUrlError(true);\n        setIsFormSubmitted(true);\n\n        return;\n      }\n\n      resetForm();\n    }\n\n    setIsFormSubmitted(true);\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={handleSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={(newValue) => setTitle(newValue)}\n        required\n        error={titleError ? 'Title is required' : undefined}\n        onBlur={() => setIsFormSubmitted(true)}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={(newValue) => setDescription(newValue)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(newValue) => setImgUrl(newValue)}\n        onBlur={() => setImgUrlError(!imgUrl.trim())}\n        required\n        showError={isFormSubmitted}\n        error={\n          (imgUrlError && 'Image URL is required')\n          || (isFormSubmitted && !validateUrl(imgUrl) && 'Invalid Image URL')\n          || undefined\n        }\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"IMDb URL\"\n        value={imdbUrl}\n        onChange={(newValue) => setImdbUrl(newValue)}\n        onBlur={() => setImdbUrlError(!imdbUrl.trim())}\n        required\n        showError={isFormSubmitted}\n        error={\n          (imdbUrlError && 'IMDb URL is required')\n          || (isFormSubmitted && !validateUrl(imdbUrl) && 'Invalid IMDb URL')\n          || undefined\n        }\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"IMDb ID\"\n        value={imdbId}\n        onChange={(newValue) => setImdbId(newValue)}\n        onBlur={() => setImdbIdError(!imdbId.trim())}\n        required\n        showError={isFormSubmitted}\n        error={imdbIdError ? 'IMDb ID is required' : undefined}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={\n              !title.trim()\n              || !imgUrl.trim()\n              || !imdbUrl.trim()\n              || !imdbId.trim()\n            }\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { NewMovie } from './components/NewMovie/NewMovie';\n\nexport const App = () => {\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesFromServer} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}